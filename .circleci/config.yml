version: 2.1
working_directory: /tmp
jobs:
  build-frontend:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - run:
          name: yarn
          command: yarn
      - run:
          name: build
          command: yarn build
      - persist_to_workspace:
          root: dist
          paths:
            - ./
  build-backend:
    docker:
      - image: ocaml/opam2:4.08
        environment:
          TERM: xterm
      - image: postgres:12.2
        environment:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: dev
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Check workspace content
          command: |
            ls -a /tmp/workspace
            ls -a /tmp/workspace/dist
      - run:
          name: Update opam
          command: |
            opam remote remove --all default
            opam remote add default https://opam.ocaml.org
      - checkout
      - run:
          name: Pin packages
          command: |
            # TODO remove this once sihl is in OPAM
            opam pin add -y -n sihl_core https://github.com/oxidizing/sihl.git\#0.0.23
            # TODO remove this once sihl is in OPAM
            opam pin add -y -n sihl_email https://github.com/oxidizing/sihl.git\#0.0.23
            # TODO remove this once sihl is in OPAM
            opam pin add -y -n sihl_user https://github.com/oxidizing/sihl.git\#0.0.23
            opam pin add -y -n sihl_example_issues .
      - run:
          name: Install system dependencies
          command: |
            opam depext -y sihl_example_issues
      - run:
          name: Install OCaml dependencies
          command: opam install --deps-only -y sihl_example_issues
      - run:
          name: Build
          command: opam config exec -- make
      - run:
          name: Install OCaml test dependencies
          command: opam install -y alcotest alcotest-lwt cohttp-lwt-unix
      - run:
          name: Test
          command: opam config exec -- make test

workflows:
  version: 2
  build:
    jobs:
      - build-frontend
      - build-backend
      - deploy
        requires:
          - build-frontend
          - build-backend
